{"version":3,"file":"mksasi-angular2-recaptcha.js","sources":["../../lib/captcha.service.ts","../../lib/captcha.component.ts","../../angular2-recaptcha.ts","../../mksasi-angular2-recaptcha.ts"],"sourcesContent":["import { Injectable, NgZone, Optional, SkipSelf } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/*\n * Common service shared by all reCaptcha component instances\n * through dependency injection.\n * This service has the task of loading the reCaptcha API once for all.\n * Only the first instance of the component creates the service, subsequent\n * components will use the existing instance.\n *\n * As the language is passed to the <script>, the first component\n * determines the language of all subsequent components. This is a limitation\n * of the present Google API.\n */\n@Injectable()\nexport class ReCaptchaService {\n\n    private scriptLoaded = false;\n    private readySubject: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n    constructor(zone: NgZone) {\n        /* the callback needs to exist before the API is loaded */\n\t\tif (typeof window != 'undefined') {\n\t\t\twindow[<any>\"reCaptchaOnloadCallback\"] = <any>(() => zone.runOutsideAngular(this.onloadCallback.bind(this)));\n\t\t}\n    }\n\n    public getReady(language: string, global: boolean): Observable<boolean> {\n        if (!this.scriptLoaded) {\n            const scriptUrl = !!global ? 'www.recaptcha.net' : 'www.google.com';\n            this.scriptLoaded = true;\n            let doc = <HTMLDivElement>document.body;\n            let script = document.createElement('script');\n            script.innerHTML = '';\n            script.src = `https://${scriptUrl}/recaptcha/api.js?onload=reCaptchaOnloadCallback&render=explicit` +\n                (language ? '&hl=' + language : '');\n            script.async = true;\n            script.defer = true;\n            doc.appendChild(script);\n        }\n        return this.readySubject.asObservable();\n    }\n\n    private onloadCallback() {\n        this.readySubject.next(true);\n    }\n}\n\n/* singleton pattern taken from https://github.com/angular/angular/issues/13854 */\nexport function RECAPTCHA_SERVICE_PROVIDER_FACTORY(ngZone: NgZone, parentDispatcher: ReCaptchaService) {\n    return parentDispatcher || new ReCaptchaService(ngZone);\n}\n\nexport const RECAPTCHA_SERVICE_PROVIDER = {\n    provide: ReCaptchaService,\n    deps: [NgZone, [new Optional(), new SkipSelf(), ReCaptchaService]],\n    useFactory: RECAPTCHA_SERVICE_PROVIDER_FACTORY\n};\n","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    EventEmitter,\n    NgZone,\n    ViewChild, ElementRef, forwardRef\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { ReCaptchaService } from './captcha.service';\n\n@Component({\n    selector: 're-captcha',\n    template: '<div #target></div>',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ReCaptchaComponent),\n            multi: true\n        }\n    ]\n})\nexport class ReCaptchaComponent implements OnInit, ControlValueAccessor {\n\n    @Input() site_key: string = null;\n    @Input() theme = 'light';\n    @Input() type = 'image';\n    @Input() size = 'normal';\n    @Input() tabindex = 0;\n    @Input() badge = 'bottomright';\n    /* Available languages: https://developers.google.com/recaptcha/docs/language */\n    @Input() language: string = null;\n    @Input() global: boolean = false;\n\n    @Output() captchaResponse = new EventEmitter<string>();\n    @Output() captchaExpired = new EventEmitter();\n    @Output() loaded = new EventEmitter<boolean>();\n\n    @ViewChild('target') targetRef: ElementRef;\n    widgetId: any = null;\n\n    onChange: Function = () => {};\n    onTouched: Function = () => {};\n\n    constructor(\n        private _zone: NgZone,\n        private _captchaService: ReCaptchaService\n    ) {\n    }\n\n    ngOnInit() {\n        this._captchaService.getReady(this.language, this.global)\n            .subscribe((ready) => {\n                if (!ready)\n                    return;\n                // noinspection TypeScriptUnresolvedVariable,TypeScriptUnresolvedFunction\n                this.widgetId = (<any>window).grecaptcha.render(this.targetRef.nativeElement, {\n                    'sitekey': this.site_key,\n                    'badge': this.badge,\n                    'theme': this.theme,\n                    'type': this.type,\n                    'size': this.size,\n                    'tabindex': this.tabindex,\n                    'callback': <any>((response: any) => this._zone.run(this.recaptchaCallback.bind(this, response))),\n                    'expired-callback': <any>(() => this._zone.run(this.recaptchaExpiredCallback.bind(this)))\n                });\n                setTimeout(() => {\n                    this.loaded.emit(true);                \n                }, 0);\n            });\n    }\n\n    // noinspection JSUnusedGlobalSymbols\n    public reset() {\n        if (this.widgetId === null)\n            return;\n        // noinspection TypeScriptUnresolvedVariable\n        this._zone.runOutsideAngular((<any>window).grecaptcha.reset.bind(this.widgetId));\n        this.onChange(null);\n    }\n\n    // noinspection JSUnusedGlobalSymbols\n    public execute() {\n        if (this.widgetId === null)\n            return;\n        // noinspection TypeScriptUnresolvedVariable\n        (<any>window).grecaptcha.execute(this.widgetId);\n    }\n\n    public getResponse(): string {\n        if (this.widgetId === null)\n            return null;\n        // noinspection TypeScriptUnresolvedVariable\n        return (<any>window).grecaptcha.getResponse(this.widgetId);\n    }\n\n    writeValue(newValue: any): void {\n        /* ignore it */\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    private recaptchaCallback(response: string) {\n        this.onChange(response);\n        this.onTouched();\n        this.captchaResponse.emit(response);\n    }\n\n    private recaptchaExpiredCallback() {\n        this.onChange(null);\n        this.onTouched();\n        this.captchaExpired.emit();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { ReCaptchaComponent } from \"./lib/captcha.component\";\nimport { RECAPTCHA_SERVICE_PROVIDER } from \"./lib/captcha.service\";\n\n@NgModule({\n    declarations: [ReCaptchaComponent],\n    exports: [ReCaptchaComponent],\n    providers: [RECAPTCHA_SERVICE_PROVIDER]\n})\nexport class ReCaptchaModule {}\n\nexport * from './lib/captcha.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './angular2-recaptcha';\n\nexport {RECAPTCHA_SERVICE_PROVIDER as ɵc,RECAPTCHA_SERVICE_PROVIDER_FACTORY as ɵb,ReCaptchaService as ɵa} from './lib/captcha.service';"],"names":[],"mappings":"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"}